/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ToggleBackgroundColorImport } from './routes/ToggleBackgroundColor'
import { Route as TodoImport } from './routes/Todo'
import { Route as TestimonialsImport } from './routes/Testimonials'
import { Route as StopWatchImport } from './routes/StopWatch'
import { Route as ProfilesImport } from './routes/Profiles'
import { Route as FormImport } from './routes/Form'
import { Route as DebounceDemoImport } from './routes/DebounceDemo'
import { Route as CounterImport } from './routes/Counter'
import { Route as CalculatorImport } from './routes/Calculator'
import { Route as AccordionImport } from './routes/Accordion'
import { Route as NotFoundImport } from './routes/$not-found'
import { Route as IndexImport } from './routes/index'
import { Route as ProfilePidImport } from './routes/profile.$pid'

// Create Virtual Routes

const MealsLazyImport = createFileRoute('/Meals')()

// Create/Update Routes

const MealsLazyRoute = MealsLazyImport.update({
  id: '/Meals',
  path: '/Meals',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/Meals.lazy').then((d) => d.Route))

const ToggleBackgroundColorRoute = ToggleBackgroundColorImport.update({
  id: '/ToggleBackgroundColor',
  path: '/ToggleBackgroundColor',
  getParentRoute: () => rootRoute,
} as any)

const TodoRoute = TodoImport.update({
  id: '/Todo',
  path: '/Todo',
  getParentRoute: () => rootRoute,
} as any)

const TestimonialsRoute = TestimonialsImport.update({
  id: '/Testimonials',
  path: '/Testimonials',
  getParentRoute: () => rootRoute,
} as any)

const StopWatchRoute = StopWatchImport.update({
  id: '/StopWatch',
  path: '/StopWatch',
  getParentRoute: () => rootRoute,
} as any)

const ProfilesRoute = ProfilesImport.update({
  id: '/Profiles',
  path: '/Profiles',
  getParentRoute: () => rootRoute,
} as any)

const FormRoute = FormImport.update({
  id: '/Form',
  path: '/Form',
  getParentRoute: () => rootRoute,
} as any)

const DebounceDemoRoute = DebounceDemoImport.update({
  id: '/DebounceDemo',
  path: '/DebounceDemo',
  getParentRoute: () => rootRoute,
} as any)

const CounterRoute = CounterImport.update({
  id: '/Counter',
  path: '/Counter',
  getParentRoute: () => rootRoute,
} as any)

const CalculatorRoute = CalculatorImport.update({
  id: '/Calculator',
  path: '/Calculator',
  getParentRoute: () => rootRoute,
} as any)

const AccordionRoute = AccordionImport.update({
  id: '/Accordion',
  path: '/Accordion',
  getParentRoute: () => rootRoute,
} as any)

const NotFoundRoute = NotFoundImport.update({
  id: '/$not-found',
  path: '/$not-found',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProfilePidRoute = ProfilePidImport.update({
  id: '/profile/$pid',
  path: '/profile/$pid',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$not-found': {
      id: '/$not-found'
      path: '/$not-found'
      fullPath: '/$not-found'
      preLoaderRoute: typeof NotFoundImport
      parentRoute: typeof rootRoute
    }
    '/Accordion': {
      id: '/Accordion'
      path: '/Accordion'
      fullPath: '/Accordion'
      preLoaderRoute: typeof AccordionImport
      parentRoute: typeof rootRoute
    }
    '/Calculator': {
      id: '/Calculator'
      path: '/Calculator'
      fullPath: '/Calculator'
      preLoaderRoute: typeof CalculatorImport
      parentRoute: typeof rootRoute
    }
    '/Counter': {
      id: '/Counter'
      path: '/Counter'
      fullPath: '/Counter'
      preLoaderRoute: typeof CounterImport
      parentRoute: typeof rootRoute
    }
    '/DebounceDemo': {
      id: '/DebounceDemo'
      path: '/DebounceDemo'
      fullPath: '/DebounceDemo'
      preLoaderRoute: typeof DebounceDemoImport
      parentRoute: typeof rootRoute
    }
    '/Form': {
      id: '/Form'
      path: '/Form'
      fullPath: '/Form'
      preLoaderRoute: typeof FormImport
      parentRoute: typeof rootRoute
    }
    '/Profiles': {
      id: '/Profiles'
      path: '/Profiles'
      fullPath: '/Profiles'
      preLoaderRoute: typeof ProfilesImport
      parentRoute: typeof rootRoute
    }
    '/StopWatch': {
      id: '/StopWatch'
      path: '/StopWatch'
      fullPath: '/StopWatch'
      preLoaderRoute: typeof StopWatchImport
      parentRoute: typeof rootRoute
    }
    '/Testimonials': {
      id: '/Testimonials'
      path: '/Testimonials'
      fullPath: '/Testimonials'
      preLoaderRoute: typeof TestimonialsImport
      parentRoute: typeof rootRoute
    }
    '/Todo': {
      id: '/Todo'
      path: '/Todo'
      fullPath: '/Todo'
      preLoaderRoute: typeof TodoImport
      parentRoute: typeof rootRoute
    }
    '/ToggleBackgroundColor': {
      id: '/ToggleBackgroundColor'
      path: '/ToggleBackgroundColor'
      fullPath: '/ToggleBackgroundColor'
      preLoaderRoute: typeof ToggleBackgroundColorImport
      parentRoute: typeof rootRoute
    }
    '/Meals': {
      id: '/Meals'
      path: '/Meals'
      fullPath: '/Meals'
      preLoaderRoute: typeof MealsLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile/$pid': {
      id: '/profile/$pid'
      path: '/profile/$pid'
      fullPath: '/profile/$pid'
      preLoaderRoute: typeof ProfilePidImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$not-found': typeof NotFoundRoute
  '/Accordion': typeof AccordionRoute
  '/Calculator': typeof CalculatorRoute
  '/Counter': typeof CounterRoute
  '/DebounceDemo': typeof DebounceDemoRoute
  '/Form': typeof FormRoute
  '/Profiles': typeof ProfilesRoute
  '/StopWatch': typeof StopWatchRoute
  '/Testimonials': typeof TestimonialsRoute
  '/Todo': typeof TodoRoute
  '/ToggleBackgroundColor': typeof ToggleBackgroundColorRoute
  '/Meals': typeof MealsLazyRoute
  '/profile/$pid': typeof ProfilePidRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$not-found': typeof NotFoundRoute
  '/Accordion': typeof AccordionRoute
  '/Calculator': typeof CalculatorRoute
  '/Counter': typeof CounterRoute
  '/DebounceDemo': typeof DebounceDemoRoute
  '/Form': typeof FormRoute
  '/Profiles': typeof ProfilesRoute
  '/StopWatch': typeof StopWatchRoute
  '/Testimonials': typeof TestimonialsRoute
  '/Todo': typeof TodoRoute
  '/ToggleBackgroundColor': typeof ToggleBackgroundColorRoute
  '/Meals': typeof MealsLazyRoute
  '/profile/$pid': typeof ProfilePidRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$not-found': typeof NotFoundRoute
  '/Accordion': typeof AccordionRoute
  '/Calculator': typeof CalculatorRoute
  '/Counter': typeof CounterRoute
  '/DebounceDemo': typeof DebounceDemoRoute
  '/Form': typeof FormRoute
  '/Profiles': typeof ProfilesRoute
  '/StopWatch': typeof StopWatchRoute
  '/Testimonials': typeof TestimonialsRoute
  '/Todo': typeof TodoRoute
  '/ToggleBackgroundColor': typeof ToggleBackgroundColorRoute
  '/Meals': typeof MealsLazyRoute
  '/profile/$pid': typeof ProfilePidRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$not-found'
    | '/Accordion'
    | '/Calculator'
    | '/Counter'
    | '/DebounceDemo'
    | '/Form'
    | '/Profiles'
    | '/StopWatch'
    | '/Testimonials'
    | '/Todo'
    | '/ToggleBackgroundColor'
    | '/Meals'
    | '/profile/$pid'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$not-found'
    | '/Accordion'
    | '/Calculator'
    | '/Counter'
    | '/DebounceDemo'
    | '/Form'
    | '/Profiles'
    | '/StopWatch'
    | '/Testimonials'
    | '/Todo'
    | '/ToggleBackgroundColor'
    | '/Meals'
    | '/profile/$pid'
  id:
    | '__root__'
    | '/'
    | '/$not-found'
    | '/Accordion'
    | '/Calculator'
    | '/Counter'
    | '/DebounceDemo'
    | '/Form'
    | '/Profiles'
    | '/StopWatch'
    | '/Testimonials'
    | '/Todo'
    | '/ToggleBackgroundColor'
    | '/Meals'
    | '/profile/$pid'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NotFoundRoute: typeof NotFoundRoute
  AccordionRoute: typeof AccordionRoute
  CalculatorRoute: typeof CalculatorRoute
  CounterRoute: typeof CounterRoute
  DebounceDemoRoute: typeof DebounceDemoRoute
  FormRoute: typeof FormRoute
  ProfilesRoute: typeof ProfilesRoute
  StopWatchRoute: typeof StopWatchRoute
  TestimonialsRoute: typeof TestimonialsRoute
  TodoRoute: typeof TodoRoute
  ToggleBackgroundColorRoute: typeof ToggleBackgroundColorRoute
  MealsLazyRoute: typeof MealsLazyRoute
  ProfilePidRoute: typeof ProfilePidRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NotFoundRoute: NotFoundRoute,
  AccordionRoute: AccordionRoute,
  CalculatorRoute: CalculatorRoute,
  CounterRoute: CounterRoute,
  DebounceDemoRoute: DebounceDemoRoute,
  FormRoute: FormRoute,
  ProfilesRoute: ProfilesRoute,
  StopWatchRoute: StopWatchRoute,
  TestimonialsRoute: TestimonialsRoute,
  TodoRoute: TodoRoute,
  ToggleBackgroundColorRoute: ToggleBackgroundColorRoute,
  MealsLazyRoute: MealsLazyRoute,
  ProfilePidRoute: ProfilePidRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/$not-found",
        "/Accordion",
        "/Calculator",
        "/Counter",
        "/DebounceDemo",
        "/Form",
        "/Profiles",
        "/StopWatch",
        "/Testimonials",
        "/Todo",
        "/ToggleBackgroundColor",
        "/Meals",
        "/profile/$pid"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/$not-found": {
      "filePath": "$not-found.jsx"
    },
    "/Accordion": {
      "filePath": "Accordion.jsx"
    },
    "/Calculator": {
      "filePath": "Calculator.jsx"
    },
    "/Counter": {
      "filePath": "Counter.jsx"
    },
    "/DebounceDemo": {
      "filePath": "DebounceDemo.jsx"
    },
    "/Form": {
      "filePath": "Form.jsx"
    },
    "/Profiles": {
      "filePath": "Profiles.jsx"
    },
    "/StopWatch": {
      "filePath": "StopWatch.jsx"
    },
    "/Testimonials": {
      "filePath": "Testimonials.jsx"
    },
    "/Todo": {
      "filePath": "Todo.jsx"
    },
    "/ToggleBackgroundColor": {
      "filePath": "ToggleBackgroundColor.jsx"
    },
    "/Meals": {
      "filePath": "Meals.lazy.jsx"
    },
    "/profile/$pid": {
      "filePath": "profile.$pid.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
